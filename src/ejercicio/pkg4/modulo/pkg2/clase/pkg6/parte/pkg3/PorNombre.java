/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejercicio.pkg4.modulo.pkg2.clase.pkg6.parte.pkg3;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge Santiago
 */
public class PorNombre extends javax.swing.JInternalFrame {
private DefaultTableModel modelo= new DefaultTableModel();   /// Creo el Modelo de Tabla con el que voy a trabajar 

    public boolean isCellEditable(int f, int c){
                        // con este booleano se deniega la posibilidad de editar las filas y las columnas de la tabla
        return false;
    
    }

    /**
     * Creates new form PorNombre
     */
    public PorNombre() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Busqueda por Nombre");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setText("Supermercado \"De Todo S.A.\"");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Busqueda por Nombre");

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel3.setText("Escriba los primeros caracteres");

        jTNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNombreKeyReleased(evt);
            }
        });

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(211, 211, 211)
                                .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNombreKeyReleased
                                                        /// Se convoca al metodo para borrar filas cada vez q actua esta funcion Antes del Foreach
         eliminarFilas();
        
                                                        /// KeyReleased es una accion se crea
                                                        /// una fila de texto que empieza buscar apenas soltas el dedo
                                                        /// del teclado
      try{                                                  
        for (Producto produ:Supermercado.listaProducto){
                                                        /// con este foreach busco dentro de la listaProducto del TreeSet creado en 
                                                        /// la clase Supermercado
                                                        
            if(produ.getNombre().startsWith(jTNombre.getText())){
                if(jTNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Campo Vacio. Completar todos los datos");
            return;
                }
                modelo.addRow(new Object[]{
                produ.getCodigo(),
                produ.getPrecio(),
                produ.getDescripcion(),
                produ.getStock(),
                produ.getRubro(),
                });
                                                        // Con este if comparo si lo que aparece en el TreeSet es igual a lo que figura en el espacio 
                                                        // para insertar caracteres y luego si hay concidencia mostrar esa informacion en la tabla 
                                                        // en ese orden
            }
            
        }
        }catch(NumberFormatException nf){
        JOptionPane.showMessageDialog(this, "ERROR. Debe ingresar un numero ");
    }
    }//GEN-LAST:event_jTNombreKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTable jTProductos;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){
                                     
        modelo.addColumn("Codigo");
        modelo.addColumn("Precio");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Stock");
        modelo.addColumn("Rubro");
                                     // Armo el Modelo de Tabla que necesito con los items q necesito
        jTProductos.setModel(modelo);
    }
    
    private void eliminarFilas(){
        
        int f = jTProductos.getRowCount()-1;
                                    // con RowCount te cuenta la cantidad de filas q hay
        for(;f>=0; f--){
            modelo.removeRow(f);
                                    // se llama a la Tabla y se renueve las filas q estan de mas con un for
        }
        
    }
    
    
}
